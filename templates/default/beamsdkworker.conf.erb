input {
  beats {
    port => <%= node['logstash']['beats']['beamsdkworker_port'] %>
  }
}

filter {

  grok {
    match => {"message" => "%{GREEDYDATA:log_message}"}
  }

  #Ignore failed parse enties. Grok filter has been tested with http://grokconstructor.appspot.com
  if "_grokparsefailure" in [tags] {
    drop { }
  }

  mutate {
     copy => { "source" => "file" }
  }

  grok {
     match => { "source" => ".+beamsdkworker-(?<project>[^-]*)-(?<container>[^_]*)_(?<cid>[^_]*)_(?<appid>[^-]*)_(?<appidid>[^-]*)_(?<appattempt>[^-]*).log" }
  }

  mutate {
    remove_field => [ "[host]" ]
  }

  mutate {
    add_field => {
     "host" => "%{[agent][hostname]}"
    }
  }

  mutate {
    remove_field => [ "message" , "offset", "prospector", "agent", "source", "tags", "appidid", "appattempt", "cid", "container", "log", "input", "ecs"]
  }
}

output {
  elasticsearch {
    hosts => [<%= @elastic_addr %>]
    index => "%{project}_beamsdkworker-%{+YYYY.MM.dd}"
    <% if node['elastic']['opendistro_security']['enabled'] %>
    user => "<%=node['elastic']['opendistro_security']['logstash']['username']%>"
    password => "<%=node['elastic']['opendistro_security']['logstash']['password']%>"
    <% if node['elastic']['opendistro_security']['https']['enabled'] %>
    cacert => "<%=node['elastic']['opendistro_security']['ca']%>"
    ssl => true
    ilm_enabled => false
    <% end %>
    <% end %>
  }
}
