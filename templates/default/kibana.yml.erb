# Kibana is served by a back end server. This setting specifies the port to use.
#server.port: 5601
server.port: <%= node['kibana']['port'] %>

# Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.
# The default is 'localhost', which usually means remote machines will not be able to connect.
# To allow connections from remote users, set this parameter to a non-loopback address.
#server.host: "localhost"
server.host: "0.0.0.0"

# Enables you to specify a path to mount Kibana at if you are running behind a proxy.
# Use the `server.rewriteBasePath` setting to tell Kibana if it should remove the basePath
# from requests it receives, and to prevent a deprecation warning at startup.
# This setting cannot end in a slash.
#server.basePath: ""
server.basePath: "/hopsworks-api/kibana"

# Specifies whether Kibana should rewrite requests that are prefixed with
# `server.basePath` or require that they are rewritten by your reverse proxy.
# This setting was effectively always `false` before Kibana 6.3 and will
# default to `true` starting in Kibana 7.0.
server.rewriteBasePath: false

# The maximum payload size in bytes for incoming server requests.
#server.maxPayloadBytes: 1048576

# The Kibana server's name.  This is used for display purposes.
#server.name: "your-hostname"

# The URLs of the Elasticsearch instances to use for all your queries.
#elasticsearch.hosts: ["http://localhost:9200"]
elasticsearch.hosts: [<%= @elastic_addr %>]

# When this setting's value is true Kibana uses the hostname specified in the server.host
# setting. When the value of this setting is false, Kibana uses the hostname of the host
# that connects to this Kibana instance.
#elasticsearch.preserveHost: true
elasticsearch.preserveHost: true

# Kibana uses an index in Elasticsearch to store saved searches, visualizations and
# dashboards. Kibana creates a new index if the index doesn't already exist.
#kibana.index: ".kibana"
kibana.index: "<%= node['elastic']['opendistro_security']['kibana']['index'] %>"

# The default application to load.
#kibana.defaultAppId: "home"
kibana.defaultAppId: "discover"

# If your Elasticsearch is protected with basic authentication, these settings provide
# the username and password that the Kibana server uses to perform maintenance on the Kibana
# index at startup. Your Kibana users still need to authenticate with Elasticsearch, which
# is proxied through the Kibana server.
<% if node['elastic']['opendistro_security']['enabled']%>
elasticsearch.username: "<%= node['elastic']['opendistro_security']['kibana']['username']%>"
elasticsearch.password: "<%= node['elastic']['opendistro_security']['kibana']['password']%>"
<% end %>

# Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.
# These settings enable SSL for outgoing requests from the Kibana server to the browser.
server.ssl.enabled: <%= node['kibana']['opendistro_security']['https']['enabled'] %>
server.ssl.certificate: <%= node['kibana']['opendistro_security']['ssl']['certificate'] %>
server.ssl.key: <%= node['kibana']['opendistro_security']['ssl']['key'] %>

# Optional settings that provide the paths to the PEM-format SSL certificate and key files.
# These files validate that your Elasticsearch backend uses the same key files.
#elasticsearch.ssl.certificate: /path/to/your/client.crt
#elasticsearch.ssl.key: /path/to/your/client.key

# Optional setting that enables you to specify a path to the PEM file for the certificate
# authority for your Elasticsearch instance.
<% if node['elastic']['opendistro_security']['enabled'] && node['elastic']['opendistro_security']['https']['enabled'] %>
elasticsearch.ssl.certificateAuthorities: [ "<%=node['elastic']['opendistro_security']['ca']%>"]

# To disregard the validity of SSL certificates, change this setting's value to 'none'.
elasticsearch.ssl.verificationMode: full

<% end %>

# Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of
# the elasticsearch.requestTimeout setting.
#elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or Elasticsearch. This value
# must be a positive integer.
#elasticsearch.requestTimeout: 30000

# List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side
# headers, set this value to [] (an empty list).
#elasticsearch.requestHeadersWhitelist: [ authorization ]

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.
#elasticsearch.customHeaders: {}

# Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.
#elasticsearch.shardTimeout: 30000
elasticsearch.shardTimeout: 10000

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.
#elasticsearch.startupTimeout: 5000
elasticsearch.startupTimeout: 5000

# Logs queries sent to Elasticsearch. Requires logging.verbose set to true.
#elasticsearch.logQueries: false

# Specifies the path where Kibana creates the process ID file.
#pid.file: /var/run/kibana.pid
pid.file: <%= node['kibana']['pid_file'] %>

# Enables you specify a file where Kibana stores log output.
#logging.dest: stdout
logging.dest: <%= node['kibana']['log_dir'] %>/kibana.log

# Set the value of this setting to true to suppress all logging output.
#logging.silent: false

# Set the value of this setting to true to suppress all logging output other than error messages.
#logging.quiet: false

# Set the value of this setting to true to log all events, including system usage information
# and all requests.
#logging.verbose: false

# Set the interval in milliseconds to sample system and process performance
# metrics. Minimum is 100ms. Defaults to 5000.
#ops.interval: 5000

# Specifies locale to be used for all localizable strings, dates and number formats.
#i18n.locale: "en"
<% if node['elastic']['opendistro_security']['enabled'] %>
elasticsearch.requestHeadersWhitelist: ["securitytenant","Authorization"]

<% if node['elastic']['opendistro_security']['jwt']['enabled'].casecmp?("true")  %>
opendistro_security.auth.type: "jwt"
opendistro_security.jwt.url_param: <%= node['elastic']['opendistro_security']['jwt']['url_parameter']%>
<% end %>

#cookies
opendistro_security.cookie.ttl: <%=node['kibana']['opendistro_security']['cookie']['ttl']%>
opendistro_security.session.ttl: <%=node['kibana']['opendistro_security']['session']['ttl']%>
opendistro_security.session.keepalive: <%=node['kibana']['opendistro_security']['session']['keepalive'].casecmp?("true")%>

# multitenancy
opendistro_security.multitenancy.enabled: <%= node['elastic']['opendistro_security']['kibana']['multitenancy']['enabled'].casecmp?("true") %>
opendistro_security.multitenancy.tenants.enable_global: <%= node['kibana']['opendistro_security']['multitenancy']['global']['enabled'].casecmp?("true") %>
opendistro_security.multitenancy.tenants.enable_private: <%= node['kibana']['opendistro_security']['multitenancy']['private']['enabled'].casecmp?("true") %>
<% end %>
